% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{learnLDS}
\alias{learnLDS}
\title{Learn LDS model}
\usage{
learnLDS(y, u, v, init, niter, tol)
}
\arguments{
\item{y}{Observation matrix (may need to be normalized and centered before hand) (q rows, T columns)}

\item{u}{Input matrix for the state equation (m_u rows, T columns)}

\item{v}{Input matrix for the output equation (m_v rows, T columns)}

\item{init}{A list of initial conditions, each element is a vector of length 4, the initial values for A, B, C and D. The initial values for Q and R are always 1, and mu_1 is 0 and V_1 is 1.}

\item{niter}{Maximum number of iterations, default 1000}

\item{tol}{Tolerance for likelihood convergence, default 1e-5. Note that the log-likelihood is normalized}
}
\value{
A list of fitted elements (X, Y, V, Cov, and lik)
\itemize{
\item X: a matrix of fitted states
\item Y: a matrix of fitted observation
\item V: a matrix of covariance of X
\item Cov: covariance of X_t and X_t-1
lik : log-likelihood
}
}
\description{
Estimate the hidden state and model parameters given observations and exogeneous inputs using the EM algorithm. This is the key backend routine of this package.
}
\section{Note}{
 This code only works on one dimensional state and output at the moment. Therefore, transposing is skipped, and matrix inversion is treated as /, and log(det(Sigma)) is treated as log(Sigma).
}

